{"ast":null,"code":"var _jsxFileName = \"/Users/arthurroth/Desktop/REACT-FLASK/client/src/components/LoginMask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport './LoginMask.css';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginMask() {\n  _s();\n\n  // React States\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false);\n  const navigate = useNavigate();\n\n  function returnSubmit() {\n    return isSubmitted;\n  }\n\n  ; // User Login info\n\n  const database = [{\n    username: \"user1\",\n    password: \"pass1\"\n  }, {\n    username: \"admin2\",\n    password: \"pass2\"\n  }];\n  const errors = {\n    uname: \"invalid username\",\n    pass: \"invalid password\"\n  };\n\n  const handleSubmit = event => {\n    //Prevent page reload\n    event.preventDefault();\n    var {\n      uname,\n      pass\n    } = document.forms[0]; // Find user login info\n\n    const userData = database.find(user => user.username === uname.value); // Compare user info\n\n    if (userData) {\n      if (userData.password !== pass.value) {\n        // Invalid password\n        setErrorMessages({\n          name: \"pass\",\n          message: errors.pass\n        });\n      } else {\n        setIsSubmitted(true);\n\n        if (uname.value === \"user1\") {\n          let link = \"/dashboard/\" + uname.value;\n          navigate(link);\n        } else if (uname.value === \"admin2\") {\n          let link = \"/admin/dashboard/\" + uname.value;\n          navigate(link);\n        }\n      }\n    } else {\n      // Username not found\n      setErrorMessages({\n        name: \"uname\",\n        message: errors.uname\n      });\n    }\n  }; // Generate JSX code for error message\n\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 13\n  }, this); // JSX code for login form\n\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"uname\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"uname\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"pass\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), renderErrorMessage(\"pass\")]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User is successfully logged in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 28\n    }, this) : renderForm]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LoginMask, \"0gtQMfuUmOp3YxHCKD24DtYT84I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginMask;\nexport default LoginMask;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginMask\");","map":{"version":3,"sources":["/Users/arthurroth/Desktop/REACT-FLASK/client/src/components/LoginMask.js"],"names":["React","useEffect","useState","useNavigate","LoginMask","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","navigate","returnSubmit","database","username","password","errors","uname","pass","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","link","renderErrorMessage","renderForm"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport './LoginMask.css';\nimport {useNavigate} from \"react-router-dom\"\n\nfunction LoginMask() {\n    // React States\n    const [errorMessages, setErrorMessages] = useState({});\n    const [isSubmitted, setIsSubmitted] = useState(false);\n    const navigate = useNavigate()\n\n   function returnSubmit() {\n       return isSubmitted\n   };\n\n\n    // User Login info\n    const database = [\n        {\n            username: \"user1\",\n            password: \"pass1\"\n        },\n        {\n            username: \"admin2\",\n            password: \"pass2\"\n        }\n    ];\n\n    const errors = {\n        uname: \"invalid username\",\n        pass: \"invalid password\"\n    };\n\n\n    const handleSubmit = (event) => {\n        //Prevent page reload\n        event.preventDefault();\n\n        var { uname, pass } = document.forms[0];\n\n        // Find user login info\n        const userData = database.find((user) => user.username === uname.value);\n\n        // Compare user info\n        if (userData) {\n            if (userData.password !== pass.value) {\n                // Invalid password\n                setErrorMessages({ name: \"pass\", message: errors.pass });\n            } else {\n                setIsSubmitted(true);\n                if (uname.value === \"user1\"){\n                let link = \"/dashboard/\"+uname.value\n                navigate(link)} else if(uname.value === \"admin2\") {\n                    let link = \"/admin/dashboard/\"+uname.value\n                    navigate(link)\n                }\n                \n                \n            }\n        } else {\n            // Username not found\n            setErrorMessages({ name: \"uname\", message: errors.uname });\n        }\n\n\n        \n            \n    };\n\n    // Generate JSX code for error message\n    const renderErrorMessage = (name) =>\n        name === errorMessages.name && (\n            <div className=\"error\">{errorMessages.message}</div>\n        );\n\n    // JSX code for login form\n    const renderForm = (\n        <div className=\"form\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"input-container\">\n                    <label>Username </label>\n                    <input type=\"text\" name=\"uname\" required />\n                    {renderErrorMessage(\"uname\")}\n                </div>\n                <div className=\"input-container\">\n                    <label>Password </label>\n                    <input type=\"password\" name=\"pass\" required />\n                    {renderErrorMessage(\"pass\")}\n                </div>\n                <div className=\"button-container\">\n                    <input type=\"submit\" />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div className=\"login-form\">\n            <div className=\"title\">Sign In</div>\n            {isSubmitted ? <div>User is successfully logged in</div>   : renderForm}\n\n        </div>\n    );\n}\nexport default LoginMask;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/arthurroth/Desktop/REACT-FLASK/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Members from './pages/Members';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [data, setData] = useState([{}]);\n  {\n    /* Get data from backend flask-server */\n  }\n  useEffect(() => {\n    fetch(\"/members\").then(res => res.json()).then(data => {\n      setData(data);\n      console.log(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Members, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"odp7ftN9IDg1xewk47EaAZiwHYc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/arthurroth/Desktop/REACT-FLASK/client/src/App.js"],"names":["React","useState","useEffect","Members","App","data","setData","fetch","then","res","json","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,iBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAEhB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAhC;AAEA;AAAC;AAAyC;AAC1CC,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,KAAK,CAAC,UAAD,CAAL,CAAkBC,IAAlB,CACEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADT,EAEEF,IAFF,CAGEH,IAAI,IAAI;AACNC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,KANH;AAQD,GATQ,EASN,EATM,CAAT;AAWA,sBACE;AAAA,2BACE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CArBD;;GAAMD,G;;KAAAA,G;AAuBN,eAAeA,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport Members from './pages/Members'\n\nconst App = () => {\n\n  const [data, setData] = useState([{}])\n\n  {/* Get data from backend flask-server */}\n  useEffect(() => {\n    fetch(\"/members\").then(\n      res => res.json()\n    ).then(\n      data => {\n        setData(data)\n        console.log(data)\n      }\n    )\n  }, [])\n\n  return (\n    <div>\n      <Members/>\n    </div>\n  )\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}
[{"/Users/arthurroth/Desktop/REACT-FLASK/client/src/index.js":"1","/Users/arthurroth/Desktop/REACT-FLASK/client/src/App.js":"2","/Users/arthurroth/Desktop/REACT-FLASK/client/src/pages/Members.js":"3","/Users/arthurroth/Desktop/REACT-FLASK/client/src/pages/Dashboard.js":"4","/Users/arthurroth/Desktop/REACT-FLASK/client/src/components/Login.js":"5"},{"size":243,"mtime":1646738693588,"results":"6","hashOfConfig":"7"},{"size":426,"mtime":1646739953178,"results":"8","hashOfConfig":"7"},{"size":582,"mtime":1646738981402,"results":"9","hashOfConfig":"7"},{"size":120,"mtime":1646739815461,"results":"10","hashOfConfig":"7"},{"size":2915,"mtime":1646739933684,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sch8ke",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"23"},"/Users/arthurroth/Desktop/REACT-FLASK/client/src/index.js",[],[],"/Users/arthurroth/Desktop/REACT-FLASK/client/src/App.js",["31","32","33","34"],[],"import React, {useState, useEffect} from 'react'\nimport { Link, Route, Routes, useParams } from 'react-router-dom';\nimport Login from './components/Login';\nimport Dashboard from './pages/Dashboard';\n\nconst App = () => {\n\n  \n\n  return (\n    <div>\n      <Routes>\n        <Route path='/' element={<Login/>}/>\n        <Route path='/dashboard/:userId' element={<Dashboard/>}/>\n      </Routes>\n    </div>\n  )\n}\n\nexport default App\n\n","/Users/arthurroth/Desktop/REACT-FLASK/client/src/pages/Members.js",["35"],[],"\nimport React, {useState, useEffect} from 'react'\n\nconst Members = () => {\n    const [data, setData] = useState([{}])\n\n  {/* Get data from backend flask-server */}\n  useEffect(() => {\n    fetch(\"/members\").then(\n      res => res.json()\n    ).then(\n      data => {\n        setData(data)\n        console.log(data)\n      }\n    )\n  }, [])\n\n  return (\n    <div>\n        {(typeof data.members === 'undefined') ? (\n        <p>Loading...</p>\n      ) : (\n        data.members.map((member, i) => (\n          <p key={i}>{member}</p>\n        ))\n      )}\n    </div>\n  )\n}\n\nexport default Members",["36","37"],"/Users/arthurroth/Desktop/REACT-FLASK/client/src/pages/Dashboard.js",[],[],"/Users/arthurroth/Desktop/REACT-FLASK/client/src/components/Login.js",["38","39","40","41"],[],"import React, { useEffect, useState } from \"react\";\nimport './Login.css';\nimport {useNavigate} from \"react-router-dom\"\n\nfunction Login() {\n    // React States\n    const [errorMessages, setErrorMessages] = useState({});\n    const [isSubmitted, setIsSubmitted] = useState(false);\n    const navigate = useNavigate()\n\n   function returnSubmit() {\n       return isSubmitted\n   };\n\n\n    // User Login info\n    const database = [\n        {\n            username: \"user1\",\n            password: \"pass1\"\n        },\n        {\n            username: \"admin2\",\n            password: \"pass2\"\n        }\n    ];\n\n    const errors = {\n        uname: \"invalid username\",\n        pass: \"invalid password\"\n    };\n\n\n    const handleSubmit = (event) => {\n        //Prevent page reload\n        event.preventDefault();\n\n        var { uname, pass } = document.forms[0];\n\n        // Find user login info\n        const userData = database.find((user) => user.username === uname.value);\n\n        // Compare user info\n        if (userData) {\n            if (userData.password !== pass.value) {\n                // Invalid password\n                setErrorMessages({ name: \"pass\", message: errors.pass });\n            } else {\n                setIsSubmitted(true);\n                if (uname.value == \"user1\"){\n                let link = \"/dashboard/\"+uname.value\n                navigate(link)} else if(uname.value == \"admin2\") {\n                    let link = \"/admin/dashboard/\"+uname.value\n                    navigate(link)\n                }\n                \n                \n            }\n        } else {\n            // Username not found\n            setErrorMessages({ name: \"uname\", message: errors.uname });\n        }\n\n\n        \n            \n    };\n\n    // Generate JSX code for error message\n    const renderErrorMessage = (name) =>\n        name === errorMessages.name && (\n            <div className=\"error\">{errorMessages.message}</div>\n        );\n\n    // JSX code for login form\n    const renderForm = (\n        <div className=\"form\">\n            <form onSubmit={handleSubmit}>\n                <div className=\"input-container\">\n                    <label>Username </label>\n                    <input type=\"text\" name=\"uname\" required />\n                    {renderErrorMessage(\"uname\")}\n                </div>\n                <div className=\"input-container\">\n                    <label>Password </label>\n                    <input type=\"password\" name=\"pass\" required />\n                    {renderErrorMessage(\"pass\")}\n                </div>\n                <div className=\"button-container\">\n                    <input type=\"submit\" />\n                </div>\n            </form>\n        </div>\n    );\n\n    return (\n        <div className=\"login-form\">\n            <div className=\"title\">Sign In</div>\n            {isSubmitted ? <div>User is successfully logged in</div>   : renderForm}\n\n        </div>\n    );\n}\nexport default Login;",{"ruleId":"42","severity":1,"message":"43","line":1,"column":16,"nodeType":"44","messageId":"45","endLine":1,"endColumn":24},{"ruleId":"42","severity":1,"message":"46","line":1,"column":26,"nodeType":"44","messageId":"45","endLine":1,"endColumn":35},{"ruleId":"42","severity":1,"message":"47","line":2,"column":10,"nodeType":"44","messageId":"45","endLine":2,"endColumn":14},{"ruleId":"42","severity":1,"message":"48","line":2,"column":31,"nodeType":"44","messageId":"45","endLine":2,"endColumn":40},{"ruleId":"49","severity":1,"message":"50","line":7,"column":3,"nodeType":"51","messageId":"52","endLine":7,"endColumn":45},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"42","severity":1,"message":"46","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":26},{"ruleId":"42","severity":1,"message":"57","line":11,"column":13,"nodeType":"44","messageId":"45","endLine":11,"endColumn":25},{"ruleId":"58","severity":1,"message":"59","line":50,"column":33,"nodeType":"60","messageId":"61","endLine":50,"endColumn":35},{"ruleId":"58","severity":1,"message":"59","line":52,"column":53,"nodeType":"60","messageId":"61","endLine":52,"endColumn":55},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'returnSubmit' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]